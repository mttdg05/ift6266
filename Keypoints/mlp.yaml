!obj:pylearn2.train.Train {

    # Our dataset is the contest dataset of IFT6266
    dataset: &train !obj:keypoints_dataset.FacialKeypointDataset {
        which_set: 'train',
        start: 0,
        stop: 6500 # We select only the first 6500 exemples as training set
    },

    # Our model will simply be a MLP with one Tanh layer
    model: !obj:pylearn2.models.mlp.MLP {
        layers: [
                 !obj:pylearn2.models.mlp.Tanh {
                     layer_name: 'h0',
                     dim: 500,
                     sparse_init: 15
                 },
                 !obj:pylearn2.models.mlp.Linear {
                     layer_name: 'y',
                     dim: 30,
                     sparse_init: 5
                 }
                ],
        nvis: 9216
    },

    # We use SGD as our training algorithm
    algorithm: !obj:pylearn2.training_algorithms.sgd.SGD {
        batch_size: 100,
        learning_rate: 0.001,
        # What we monitor
        monitoring_dataset:
            {
                'train' : *train ,
                'valid' : !obj:keypoints_dataset.FacialKeypointDataset {
                              which_set: 'train',
                              start: 6500, # Keep the last 500 exemples as validation set
                              stop: 7049
                          }
                # We don't have labels for the public test set
            },
        # The cost function is
        cost: !obj:pylearn2.costs.mlp.missing_target_cost.MissingTargetCost {
        },
        # The termination criteria
        termination_criterion: !obj:pylearn2.termination_criteria.MonitorBased {
            channel_name: "valid_objective"
        }
    },
    extensions: [
        !obj:pylearn2.train_extensions.best_params.MonitorBasedSaveBest {
             channel_name: 'valid_objective',
             save_path: "test_results.pkl"
        },
    ]
}
